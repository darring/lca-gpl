#!/usr/bin/env sh

# Client update wrapper script
# ----------------------------
# Wraps the functionality found in the update pumper elsewhere

EIL_VERSION=$(cat /opt/intel/eil/clientagent/lib/VERSION)

# Load our libraries
. /opt/intel/eil/clientagent/lib/helper.sh
. /opt/intel/eil/clientagent/lib/globals.sh

# The client agent bootstrapper
BOOTSTRAP_COMMAND="/opt/intel/eil/clientagent/tools/clientagent-bootstrap.sh"

trace "Update requested!"
trace "Current version is '${EIL_VERSION}'"

upgrade_agent() {
    killall -9 eil_steward
    /tmp/clientagent-bootstrap.sh > /dev/null 2>&1
    # We do this simply because there is a slight possibility that the steward
    # might not come back up on some systems after the above. This has to do
    # with the fact that we don't have a pure fork under bash... oh well.
    /etc/init.d/eil_steward.sh restart
}

if [ -f "${BOOTSTRAP_COMMAND}" ]; then
    trace "Updating... say goodbye to this process..."
    rm -f /tmp/clientagent-bootstrap.sh
    cp -f $BOOTSTRAP_COMMAND /tmp/clientagent-bootstrap.sh
    chmod a+x /tmp/clientagent-bootstrap.sh
    upgrade_agent &
else
    trace_error "-----"
    trace_error "Client agent bootstrap command not found! Unrecoverable error during update request!"
    trace_error "Verify that the client agent is installed correctly, if not, a manual reinstall might be necessary!"
fi

# vim:set ai et sts=4 sw=4 tw=80:
