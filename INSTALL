                          EIL Linux Client Agent
                          Installation Document
------------------------------------------------------------------------------

Table of Contents
1) Overview
    1.a) How to read this document
2) Introduction to the install tool
3) Package Installation
    3.a) Building a package
    3.b) Making a repository
    3.c) Installing a package using the bootstrap
    3.d) Installing a package manually
4) Manually installing the dispatcher
5) Manually building the steward
6) Technical details
    6.a) Details of the cross-distribution package

------------------------------------------------------------------------------

1) Overview

    Part of the original design goal of the EIL Linux Client Agent was to have
an install system that was distribution agnostic- meaning it would behave the
same on all supported distributions and no distribution-specific packages would
have to be maintained (see README for more details).

    This document describes the build as well as installation process for the
EIL Linux Client Agent. The intention is to get someone up-and-running as
quickly as possible, thus we will start from a very high-level and then hone in
on more detail.

1.a) How to read this document

    The first sections talk about basic installation using the install tools.
These sections will be from a very high level and will assume only a very basic
understanding of Linux and the Linux command line.

    Later sections will deal with lower level build and the installation
process "under the hood". Think of these sections as a behind the scenes
explanation of the build and installation system.

2) Introduction to the install tool

    The highest level interface to the EIL Linux Client agent build/install
system is the install tool, which must be run as root,

            * install_tool.sh

if the install tool is run without any options, the following usage text is
displayed:

    Usage: install_tool.sh [OPTION]
    Where [OPTION] is one of the following

        --install       Installs the client agent on the system
                        (building as needed)

        --uninstall     Uninstalls the client agent from the system

        --pkginstall    Install the client agent from a package
                        (should not be called unless you know what you are doing)

        --instdisp      Installs just the dispatcher on the system

        --inststew      Installs just the steward on the system

        --uninstdisp    Uninstalls the dispatcher

        --uninststew    Uninstalls the steward

        --build         Build the steward (rebuilding if needed)

        --static        Build the steward with static linking (rebuilding if
                        needed)

        --clean         Clean the steward build environment

        --runtest       Run all the unit tests

        --doc           Install just the documentation

        --pkg           Build an installable package (static linked)

        --makerepo      Build installable package and make a repo.
                        Requires an additional option specifying the URI
                        we should use for the repo. E.g.:
                        --makerepo SOMESERVER:/home/pub/releases/.

    ------------------------------------------------------------------------------

    The following helper options can be added to --pkginstall or --pkg

        -r              The installable package is a release package.
                        This means that the installable package will be named
                        generically if called with --pkg and that the output will
                        go to a log file in /var/log if called with --pkginstall.

    If ran without any options, this usage text will be displayed.

Practically all build/install features and options can be access through this
install tool.

3) Package Installation

    The most common usage of the install tool is the creation of cross-
distribution installation packages. Note that these are *NOT* native packages
for the underlying distribution, rather a single archive containing an
installable set of files which should work across a variety of different
Linux platforms. For more detail on these archives, see section (6.a).

3.a) Building a package

    A package can be built using the '--pkg' option:

            # install_tool.sh --pkg

    This will create a package in your current working directory, with static
linked binaries, and name it:

            eil_clientagent-${VERSION}.tar.gz

where ${VERSION} is the current version of the EIL Linux Client Agent (as
defined in the top-level VERSION file in the repository).

	If you wish to create a release package instead of a named version package,
then you will want to run the install tool with the '-r' option in addition to
the '--pkg' option:

			# install_tool.sh -r --pkg

    You can then un-archive this package, and install using the '--pkginstall'
option on the 'install_tool.sh' script contained inside the archive. If you
created a release, then run '--pkginstall' with the '-r' option.

3.b) Making a repository

	The install tool can be used to create a repository suitable for use with
the client agent bootstrap tool (see section (3.c) below).

3.c) Installing a package using the bootstrap


clientagent-bootstrap.sh

3.d) Installing a package manually

4) Manually installing the dispatcher
5) Manually building the steward

6) Technical details

6.a) Details of the cross-distribution package

    The cross-distribution installation package is simply a gzipped tar archive
containing a number of files expected to be in a specific layout. At present,
the layout is expected to be as follows:
        .
        ./VERSION
        ./.pkg_version
        ./install_tool.sh
        ./install_tool_esxi.sh
        ./install_helper.sh
        ./dispatcher
        ./dispatcher/install-deps.sh
        ./dispatcher/install.sh
        ./dispatcher/tools
        ./dispatcher/tools/....dispatcher tools
        ....................
        ./dispatcher/tests
        ./dispatcher/tests/....unit tests
        ....................
        ./dispatcher/lib
        ./dispatcher/lib/....shell libraries
        ....................
        ./dispatcher/bin
        ./dispatcher/bin/clientagent-dispatcher.sh
        ./dispatcher/dep-cleaner.sed
        ./dispatcher/scripts
        ./dispatcher/scripts/....scripts
        ....................
        ./dispatcher/docs
        ./dispatcher/docs/....documentation
        ....................
        ./elevate_script
        ./elevate_script/elevate_script
        ./steward
        ./steward/eil_steward

    The 'install_tool.sh' script is the same install_tool script seen before,
however, this time it is not intended to be run by hand. Instead, the script
'clientagent-bootstrap.sh', covered in (3.c) above, will run it.

    'clientagent-bootstrap.sh', when it has determined that an update is ready
(see section (3.c) above) will pull down the updated archive, open it up into
a temporary directory (created in /tmp by the mktemp command), and then execute
either the 'install_tool.sh' or 'install_tool_esxi.sh' script depending upon
whether the system is an ESXi-based system or not.

    The appropriate install tool will be called first to uninstall/purge any
existing EIL Linux Client Agent on the system:

            # ${INSTALL_TOOL} -r --uninstall

and then, it will be called again to install to the system using the special
automated '--pkginstall' option:

            # ${INSTALL_TOOL} -r --pkginstall

    '--pkginstall' is an option that is not intended to be called manually. It
automatically installs the client agent, expecting it to be laid out *exactly*
as detailed in the archive above.
